version: "3.1"

services:
  # Development app.
  # Mimic production Dockerfile.
  app:
    image: node:7.5.0
    links:
      - db
    volumes:
      # relative to the host or host-VM
      - ./build:/build
      - ./server/node_modules:/build/server/node_modules
    ports:
      - "9000:9000"
    environment:
      API_ROLE: "${API_ROLE:-api}"
      AUTH0_DOMAIN: "${AUTH0_DOMAIN}"
      AUTH0_CLIENT_ID: "${AUTH0_CLIENT_ID}"
      AUTH0_CALLBACK_PATH: "${AUTH0_CALLBACK_PATH:-/callback}"
      AUTH0_SILENT_CALLBACK_PATH: "${AUTH0_SILENT_CALLBACK_PATH:-/silent-callback}"
      IP: "${IP:-0.0.0.0}"
      MONGO_DB: "${MONGO_DB:-local}"
      MONGO_HOST: "${MONGO_HOST:-db}"
      MONGO_PORT: "${MONGO_PORT:-27017}"
      NODE_ENV: "${NODE_ENV:-development}"
      OFFLINE_USER: "${OFFLINE_USER:-false}"
      OFFLINE_USER_EMAIL: "${OFFLINE_USER_EMAIL:-test@test.com}"
      OFFLINE_USER_FIRST_NAME: "${OFFLINE_USER_FIRST_NAME:-First}"
      OFFLINE_USER_LAST_NAME: "${OFFLINE_USER_LAST_NAME:-Last}"
      OFFLINE_USER_GROUPS: "${OFFLINE_USER_GROUPS:-group}"
      OFFLINE_USER_ROLES: "${OFFLINE_USER_ROLES:-role}"
      OFFLINE_USER_PERMISSIONS: "${OFFLINE_USER_PERMISSIONS:-create,read,delete}"
      PORT: "${PORT:-9000}"
    expose:
      - "9000"
    command: node /build/server

  # Database for development app
  db:
    image: mongo
    ports:
      - "27017"

  # Server npm
  npm-server:
    image: node:7.5.0
    volumes:
      - ./server:/dir
    working_dir: /dir
    entrypoint: npm
    # Override this command for other npm behavior
    # For example, `docker-compose run --rm npm-server prune`
    command: install

  # Client npm
  npm-client:
    image: node:7.5.0
    volumes:
      - ./client:/dir
    working_dir: /dir
    entrypoint: npm
    # Override this command for other npm behavior
    # For example, `docker-compose run --rm npm-client prune`
    command: install
